// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      Role     @default(USER)
  okrs      OKR[]
}

enum Role {
  USER
  ADMIN
}

model OKR {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  period    String   // Например: "2024-Q1", "2025"
  archived  Boolean  @default(false)
  order     Int      @default(0)
  goals     Goal[]
}

model Goal {
  id              String         @id @default(uuid())
  okr             OKR           @relation(fields: [okrId], references: [id])
  okrId           String
  title           String
  keyInitiatives  String         // Ключевые инициативы (комментарий)
  order           Int            @default(0)
  keyResults      KeyResult[]
}

model KeyResult {
  id                String                 @id @default(uuid())
  goal              Goal                   @relation(fields: [goalId], references: [id])
  goalId            String
  title             String
  metric            String
  base              Float
  plan              Float
  formula           String
  order             Int                    @default(0)
  weeklyMonitoring  WeeklyMonitoringEntry[]
  comment           String?                // комментарий к KR
}

model WeeklyMonitoringEntry {
  id           String     @id @default(uuid())
  keyResult    KeyResult  @relation(fields: [keyResultId], references: [id])
  keyResultId  String
  weekNumber   Int
  value        Float

  @@unique([keyResultId, weekNumber])
}